<?xml version="1.0" encoding="utf-8"?>
<resources>
   <string-array name="answerQues">
       <item >
           Android is a combination of 3 components: <br/>
1.   A free, open source OS for mobile device <br/>
2. AN open-source development platform for making mobile application. <br/>
3.  Devices, significantly mobile phones, that run the android OS and also the application created for it. <br/>
       </item> 
       <item>An activity represents one screen with a user interface. as an example, 
       AN email application might need one activity that shows a listing of recent emails, 
       Another activity to compose an email, and another activity for reading emails. If AN application has over one activity, 
       then one in all them should be marked as the activity that’s presented once the appliance is launched.
       </item>
       <item >
           Intent is basically a message that is passed between components (such as Activities, Services, Broadcast Receivers, and Content Providers). So, it is almost equivalent to parameters passed to API calls. The fundamental differences between API calls and intents’ way of invoking components are:
           API calls are synchronous while intent-based invocations are asynchronous.
    	   API calls are compile time binding while intent-based calls are run-time binding.
    	    </item>
       <item > Explicit intent and Implicit intent.  </item>
       <item > Explicitly starting new activities in android application. Explicitly select select an Activity class to start, create a new Intent, specifying the current application. Context and activity class to launch.<br/>
				Intent intent = new Intent(MyActivity.this, MySecondAcitivity.class);<br/>
				startActivity(intent); <br/>
				After startActivity is called, the new Activity (in this example MySecondActivity) will be created and become visible and active, moving to the top of the Activity stack.
				Calling finish on the new Activity or pressing the hardware back button, will close it and remove it form the stack. 
				</item>
	    <item > Broadcast Intents are used to notify listeners of system or application events, extending the even-drivers programming model between applications. 
	        Broadcast Intents helps make your application more open; by broadcasting an event using an Intent you let yourself and third-party developers react to events without having to modify your original application. 
	        Android uses broadcast Intents extensively to broadcast system events like battery-charging levels, network connections, incoming calls and Boot OS.
           </item>
           <item > Android Toast is a small view that contains a brief message for the user. The message doesn’t persist because it’s usually available for only a few seconds – a toast never receives focus. The Task Reminder app uses a toast not for reminding the user but uses it instead for notifying the user when the activity has been saved.</item>
   </string-array> 
</resources>
